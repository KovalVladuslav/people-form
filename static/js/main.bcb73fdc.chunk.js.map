{"version":3,"sources":["components/TableHeader.js","components/Table.js","components/input-form/FirstName.js","components/input-form/LastName.js","components/input-form/Phone.js","components/input-form/Age.js","components/Form.js","App.js","index.js"],"names":["TableHeader","sortPeopleArr","className","src","alt","onClick","Table","peopleArr","deleteItemPeople","length","map","item","index","key","phone","firstName","lastName","gender","age","type","FirstName","React","memo","name","setName","register","placeholder","value","onChange","event","target","ref","required","pattern","autocomplete","LastName","setLastName","Phone","setPhone","Age","setAge","Form","nameLine","setPeopleArr","useState","setGender","useForm","errors","handleSubmit","patterValidLetters","requiredValid","onSubmit","data","createPeopleObj","split","str","i","toUpperCase","toLowerCase","join","patterValidAge","App","selectedSort","setValueSort","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","select","sort","a","b","localeCompare","reverseArr","reverse","deleteItem","filter","ReactDOM","render","document","getElementById"],"mappings":"kSA4BeA,G,YAzBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OAClB,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,eACb,oCACA,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOF,UAAU,aAAaG,QAAS,kBAAMJ,EAAc,iBAE7F,yBAAKC,UAAU,eACb,yCACA,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOF,UAAU,aAAaG,QAAS,kBAAMJ,EAAc,gBAE7F,yBAAKC,UAAU,eACb,qCACA,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOF,UAAU,aAAaG,QAAS,kBAAMJ,EAAc,aAE7F,yBAAKC,UAAU,eACb,sCACA,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOF,UAAU,aAAaG,QAAS,kBAAMJ,EAAc,cAE7F,yBAAKC,UAAU,eACb,mCACA,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOF,UAAU,aAAaG,QAAS,kBAAMJ,EAAc,cCkBlFK,EApCD,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWN,EAAd,EAAcA,cAAeO,EAA7B,EAA6BA,iBAA7B,OACZ,yBAAKN,UAAU,SACb,kBAAC,EAAD,CAAaD,cAAeA,KAC1BM,EAAUE,OAAS,EACnB,wBAAIP,UAAU,gBAAd,wBAEAK,EAAUG,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAKV,UAAU,OAAOW,IAAKF,EAAKG,OAC9B,yBAAKZ,UAAU,eACb,4BAAKS,EAAKI,YAEZ,yBAAKb,UAAU,eACb,4BAAKS,EAAKK,WAEZ,yBAAKd,UAAU,eACb,4BAAKS,EAAKG,QAEZ,yBAAKZ,UAAU,eACb,4BAAKS,EAAKM,SAEZ,yBAAKf,UAAU,eACb,4BAAKS,EAAKO,MAEZ,4BACEhB,UAAU,eACViB,KAAK,SACLd,QAAS,kBAAMG,EAAiBI,KAEhC,yBAAKT,IAAI,qBAAqBC,IAAI,SAASF,UAAU,wB,OCnBlDkB,G,MAZGC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,SAAlB,OAC3B,2BACEvB,UAAU,cACVqB,KAAK,YACLG,YAAY,YACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAQK,EAAMC,OAAOH,QAC1CI,IAAKN,EAAS,CAAEO,UAAU,EAAMC,QAAS,cACzCC,aAAa,cCIFC,EAZEd,IAAMC,MAAK,gBAAGN,EAAH,EAAGA,SAAUoB,EAAb,EAAaA,YAAaX,EAA1B,EAA0BA,SAA1B,OAC1B,2BACEF,KAAK,WACLrB,UAAU,cACVwB,YAAY,iBACZC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAWO,EAAYP,EAAMC,OAAOH,QAC9CI,IAAKN,EAAS,CAAEO,UAAU,EAAMC,QAAS,cACzCC,aAAa,WCKFG,EAbDhB,IAAMC,MAAK,gBAAGR,EAAH,EAAGA,MAAOwB,EAAV,EAAUA,SAAUb,EAApB,EAAoBA,SAApB,OACvB,2BACEN,KAAK,OACLjB,UAAU,cACVqB,KAAK,QACLG,YAAY,aACZC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAWS,EAAST,EAAMC,OAAOH,QAC3CI,IAAKN,EAAS,CAAEO,UAAU,EAAMC,QAAS,WACzCC,aAAa,WCIFK,EAbHlB,IAAMC,MAAK,gBAAGJ,EAAH,EAAGA,IAAKsB,EAAR,EAAQA,OAAQf,EAAhB,EAAgBA,SAAhB,OACrB,2BACEC,YAAY,mBACZP,KAAK,OACLjB,UAAU,cACVyB,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAWW,EAAOX,EAAMC,OAAOH,QACzCJ,KAAK,MACLQ,IAAKN,EAAS,CAAEO,UAAU,EAAMC,QAAS,iCACzCC,aAAa,WCwGFO,EA1GF,SAAC,GAAiC,IAalBC,EAbbnC,EAA8B,EAA9BA,UAAWoC,EAAmB,EAAnBA,aAAmB,EAClBC,mBAAS,IADS,mBACpCrB,EADoC,KAC9BC,EAD8B,OAEVoB,mBAAS,IAFC,mBAEpC5B,EAFoC,KAE1BoB,EAF0B,OAGhBQ,mBAAS,IAHO,mBAGpC9B,EAHoC,KAG7BwB,EAH6B,OAIdM,mBAAS,IAJK,mBAIpC3B,EAJoC,KAI5B4B,EAJ4B,OAKpBD,mBAAS,IALW,mBAKpC1B,EALoC,KAK/BsB,EAL+B,OAMDM,cAAnCrB,EANoC,EAMpCA,SAAUsB,EAN0B,EAM1BA,OAAQC,EANkB,EAMlBA,aAEpBC,EAAqB,SAACP,GAAD,OACzBK,EAAOL,IAAuC,YAA1BK,EAAOL,GAAUvB,MAChC,0BAAMjB,UAAU,eAAhB,wDAaDgD,EAAgB,SAACR,GAAD,OACpBK,EAAOL,IAAuC,aAA1BK,EAAOL,GAAUvB,MAAuB,0BAAMjB,UAAU,eAAhB,qBA6B9D,OACE,0BAAMiD,SAAUH,GA3BD,SAAAI,GACf,IAAMC,EAAkB,CACtBtC,UAAWqC,EAAKrC,UAAUuC,MAAM,IAAI5C,KAAI,SAAC6C,EAAKC,GAC5C,OAAS,IAANA,EACMD,EAAIE,cAENF,EAAIG,iBACVC,KAAK,IACR3C,SAAUoC,EAAKpC,SAASsC,MAAM,IAAI5C,KAAI,SAAC6C,EAAKC,GAC1C,OAAS,IAANA,EACMD,EAAIE,cAENF,EAAIG,iBACVC,KAAK,IACR7C,QACAG,SACAC,OAGFyB,EAAa,GAAD,mBAAKpC,GAAL,CAAgB8C,KAC5B7B,EAAQ,IACRY,EAAY,IACZE,EAAS,IACTE,EAAO,OAIiCtC,UAAU,QAChD,wBAAIA,UAAU,eAAd,QACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAWqB,KAAMA,EAAMC,QAASA,EAASC,SAAUA,IAClDwB,EAAmB,aACnBC,EAAc,cAEjB,yBAAKhD,UAAU,eACb,kBAAC,EAAD,CAAUc,SAAUA,EAAUoB,YAAaA,EAAaX,SAAUA,IACjEwB,EAAmB,YACnBC,EAAc,aAEjB,yBAAKhD,UAAU,eACb,kBAAC,EAAD,CAAOY,MAAOA,EAAOwB,SAAUA,EAAUb,SAAUA,IArDvDsB,EADyBL,EAuDF,UAtDuB,YAA1BK,EAAOL,GAAUvB,MAChC,0BAAMjB,UAAU,eAAhB,yDAsDAgD,EAAc,UAEjB,yBAAKhD,UAAU,eACb,0BAAMA,UAAU,eACd,uBAAGA,UAAU,sBAAb,sBACA,+BACE,2BAAOiB,KAAK,QACVQ,MAAM,OACNJ,KAAK,SACLK,SAAU,kBAAMiB,EAAU,SAC1Bd,IAAKN,EAAS,CAAEO,UAAU,MAE5B,uBAAG9B,UAAU,sBAAb,SAEF,+BACE,2BACEiB,KAAK,QACLQ,MAAM,SACNJ,KAAK,SACLK,SAAU,kBAAMiB,EAAU,WAC1Bd,IAAKN,EAAS,CAAEO,UAAU,MAE5B,uBAAG9B,UAAU,sBAAb,YAGHgD,EAAc,WAEjB,yBAAKhD,UAAU,eACb,kBAAC,EAAD,CAAKgB,IAAKA,EAAKsB,OAAQA,EAAQf,SAAUA,IA/ExB,SAACiB,GAAD,OACrBK,EAAOL,IAAuC,YAA1BK,EAAOL,GAAUvB,MAChC,0BAAMjB,UAAU,eAAhB,6DA8EA0D,CAAe,OACfV,EAAc,QAEjB,2BAAO/B,KAAK,SAASjB,UAAU,mBCtCtB2D,EAnEH,WAAO,IAAD,EACkBjB,mBAAS,IAD3B,mBACTrC,EADS,KACEoC,EADF,OAEqBC,mBAAS,IAF9B,mBAETkB,EAFS,KAEKC,EAFL,KAIhBC,qBAAU,WACR,IAAMZ,EAAOa,aAAaC,QAAQ,eAC9Bd,GACFT,EAAawB,KAAKC,MAAMhB,MAEzB,IAEHY,qBAAU,WACRC,aAAaI,QAAQ,cAAeF,KAAKG,UAAU/D,OAwCrD,OACE,yBAAKL,UAAU,aACb,kBAAC,EAAD,CACEK,UAAWA,EACXN,cAnCgB,SAACsE,GACrB,OAAOA,GACL,IAAK,YACL,IAAK,WACL,IAAK,SACCA,IAAWT,IACbnB,EAAa,YAAIpC,GACdiE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAQI,cAAcD,EAAEH,QAC5CR,EAAaQ,IAGf,MACF,IAAK,MACL,IAAK,QACCA,IAAWT,IACbnB,EAAa,YAAIpC,GACdiE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAUG,EAAEH,OAChCR,EAAaQ,IAGf,MACF,QAAS5B,EAAa,YAAIpC,IAG5B,GAAIgE,IAAWT,EAAc,CAC3B,IAAMc,EAAa,YAAIrE,GAAWsE,UAElClC,EAAaiC,KASXpE,iBA1CmB,SAACI,GACxB,IAAMkE,EAAavE,EAAUwE,QAAO,SAAApE,GAAI,OAAIJ,EAAUK,KAAWD,KAEjEgC,EAAamC,MAyCX,kBAAC,EAAD,CACEvE,UAAWA,EACXoC,aAAcA,M,MC7DtBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bcb73fdc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ sortPeopleArr }) => (\r\n  <div className=\"table__title item\">\r\n    <div className=\"item__block\">\r\n      <h3>Name</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('firstName')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Last Name</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('lastName')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Phone</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('phone')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Gender</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('gender')}></img>\r\n    </div>\r\n    <div className=\"item__block\">\r\n      <h3>Age</h3>\r\n      <img src=\"./icons/sort.svg\" alt=\"sort\" className=\"item__sort\" onClick={() => sortPeopleArr('age')}></img>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default TableHeader;\r\n\r\nTableHeader.propTypes = {\r\n  sortPeopleArr: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/table.css';\r\nimport TableHeader from './TableHeader';\r\n\r\nconst Table = ({ peopleArr, sortPeopleArr, deleteItemPeople }) => (\r\n  <div className=\"table\">\r\n    <TableHeader sortPeopleArr={sortPeopleArr}/>\r\n    {!peopleArr.length > 0 ? (\r\n      <h1 className=\"table__empty\">The list is empty...</h1>\r\n    ) : (\r\n      peopleArr.map((item, index) => (\r\n        <div className=\"item\" key={item.phone}>\r\n          <div className=\"item__block\">\r\n            <h3>{item.firstName}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.lastName}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.phone}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.gender}</h3>\r\n          </div>\r\n          <div className=\"item__block\">\r\n            <h3>{item.age}</h3>\r\n          </div>\r\n          <button\r\n            className=\"item__button\"\r\n            type=\"button\"\r\n            onClick={() => deleteItemPeople(index)}\r\n          >\r\n            <img src=\"./icons/remove.svg\" alt=\"delete\" className=\"item__delete\"></img>\r\n          </button>\r\n        </div>\r\n      ))\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default Table;\r\n\r\nTable.propTypes = {\r\n  peopleArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPeopleArr: PropTypes.func.isRequired,\r\n  deleteItemPeople: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\n\r\nconst FirstName = React.memo(({ name, setName, register }) => (\r\n  <input\r\n    className=\"form__input\"\r\n    name=\"firstName\"\r\n    placeholder=\"Your name\"\r\n    value={name}\r\n    onChange={(event) => setName(event.target.value)}\r\n    ref={register({ required: true, pattern: /[^0-9]+$/i })}\r\n    autocomplete=\"false\"\r\n  />\r\n  ));\r\n\r\nexport default FirstName;\r\n","import React from 'react';\r\n\r\nconst LastName = React.memo(({ lastName, setLastName, register }) => (\r\n  <input\r\n    name=\"lastName\"\r\n    className=\"form__input\"\r\n    placeholder=\"Your last name\"\r\n    value={lastName}\r\n    onChange={(event) => setLastName(event.target.value)}\r\n    ref={register({ required: true, pattern: /[^0-9]+$/i })}\r\n    autocomplete=\"off\"\r\n  />\r\n));\r\n\r\nexport default LastName;","import React from 'react';\r\n\r\nconst Phone = React.memo(({ phone, setPhone, register}) => (\r\n  <input\r\n    type=\"text\"\r\n    className=\"form__input\"\r\n    name=\"phone\"\r\n    placeholder=\"Your phone\"\r\n    value={phone}\r\n    onChange={(event) => setPhone(event.target.value)}\r\n    ref={register({ required: true, pattern: /^\\d+$/i})}\r\n    autocomplete=\"off\"\r\n  />\r\n));\r\n\r\nexport default Phone;\r\n","import React from 'react';\r\n\r\nconst Age = React.memo(({ age, setAge, register }) => (\r\n  <input\r\n    placeholder=\"how old are you?\"\r\n    type=\"text\"\r\n    className=\"form__input\"\r\n    value={age}\r\n    onChange={(event) => setAge(event.target.value)}\r\n    name=\"age\"\r\n    ref={register({ required: true, pattern: /^[1][0-2][0-9]$|^[1-9][0-9]$/})}\r\n    autocomplete=\"off\"\r\n  />\r\n));\r\n\r\nexport default Age","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport '../styles/form.css';\r\nimport FirstName from './input-form/FirstName';\r\nimport LastName from './input-form/LastName';\r\nimport Phone from './input-form/Phone';\r\nimport Age from './input-form/Age';\r\n\r\nconst Form = ({ peopleArr, setPeopleArr }) => {\r\n  const [ name, setName ] = useState('');\r\n  const [ lastName, setLastName ] = useState('');\r\n  const [ phone, setPhone ] = useState('')\r\n  const [ gender, setGender ] = useState('')\r\n  const [ age, setAge ] = useState('');\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const patterValidLetters = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">Only letters should be in this line, please correct</span>\r\n  )\r\n\r\n  const patterValidNumber = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">This line should only contain numbers, please correct</span>\r\n  )\r\n\r\n  const patterValidAge = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'pattern'\r\n      && <span className=\"form__error\">This line should only contain numbers, 10 to 99 years old</span>\r\n  )\r\n\r\n  const requiredValid = (nameLine) => (\r\n    errors[nameLine] && errors[nameLine].type === 'required' && <span className=\"form__error\">Line is required</span>\r\n  )\r\n\r\n  const onSubmit = data => { \r\n    const createPeopleObj = {\r\n      firstName: data.firstName.split('').map((str, i) => {\r\n        if(i === 0) {\r\n          return str.toUpperCase();\r\n        }\r\n        return str.toLowerCase();\r\n      }).join(''),\r\n      lastName: data.lastName.split('').map((str, i) => {\r\n        if(i === 0) {\r\n          return str.toUpperCase();\r\n        }\r\n        return str.toLowerCase();\r\n      }).join(''),\r\n      phone,\r\n      gender,\r\n      age\r\n    }\r\n\r\n    setPeopleArr([...peopleArr, createPeopleObj]);\r\n    setName('')\r\n    setLastName('')\r\n    setPhone('')\r\n    setAge('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n      <h2 className=\"form__title\">Form</h2>\r\n      <div className=\"form__block\">\r\n        <FirstName name={name} setName={setName} register={register} />\r\n        {patterValidLetters('firstName')}\r\n        {requiredValid('firstName')}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <LastName lastName={lastName} setLastName={setLastName} register={register} />\r\n        {patterValidLetters(\"lastName\")}\r\n        {requiredValid(\"lastName\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <Phone phone={phone} setPhone={setPhone} register={register} />\r\n        {patterValidNumber(\"phone\")}\r\n        {requiredValid(\"phone\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <span className=\"form__radio\">\r\n          <p className=\"form__radio__title\">Choose your gender</p>\r\n          <label>\r\n            <input type=\"radio\"\r\n              value=\"male\"\r\n              name=\"gender\"\r\n              onChange={() => setGender(\"male\")}\r\n              ref={register({ required: true })}\r\n            />\r\n            <p className=\"form__radio__title\">male</p>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"female\"\r\n              name=\"gender\"\r\n              onChange={() => setGender(\"female\")}\r\n              ref={register({ required: true })}\r\n            />\r\n            <p className=\"form__radio__title\">female</p>\r\n          </label>\r\n        </span>\r\n        {requiredValid(\"gender\")}\r\n      </div>\r\n      <div className=\"form__block\">\r\n        <Age age={age} setAge={setAge} register={register} />\r\n        {patterValidAge(\"age\")}\r\n        {requiredValid(\"age\")}\r\n      </div>\r\n      <input type=\"submit\" className=\"form__button\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  peopleArr: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPeopleArr: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './styles/app.css';\nimport Table from './components/Table';\nimport Form from './components/Form';\n\nconst App = () => {\n  const [peopleArr, setPeopleArr] = useState([]);\n  const [selectedSort, setValueSort] = useState('');\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"list-people\");\n    if (data) {\n      setPeopleArr(JSON.parse(data))\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"list-people\", JSON.stringify(peopleArr))\n  });\n\n  const deleteItemPeople = (index) => {\n    const deleteItem = peopleArr.filter(item => peopleArr[index] !== item)\n\n    setPeopleArr(deleteItem);\n  };\n\n  const sortPeopleArr = (select) => {\n    switch(select) {\n      case 'firstName':\n      case 'lastName':\n      case 'gender':\n        if (select !== selectedSort) {\n          setPeopleArr([...peopleArr]\n            .sort((a, b) => a[select].localeCompare(b[select])));\n          setValueSort(select)\n        };\n\n        break;\n      case 'age':\n      case 'phone':\n        if (select !== selectedSort) {\n          setPeopleArr([...peopleArr]\n            .sort((a, b) => a[select] - b[select]));\n          setValueSort(select)\n        }\n\n        break;\n      default: setPeopleArr([...peopleArr]);\n    }\n\n    if (select === selectedSort) {\n      const reverseArr = [...peopleArr].reverse();\n\n      setPeopleArr(reverseArr)\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Table\n        peopleArr={peopleArr}\n        sortPeopleArr={sortPeopleArr}\n        deleteItemPeople={deleteItemPeople}\n      />\n      <Form\n        peopleArr={peopleArr}\n        setPeopleArr={setPeopleArr}\n      />\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}